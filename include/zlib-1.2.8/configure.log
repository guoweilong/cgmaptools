--------------------
./configure --prefix=/Users/weilongguo/Documents/program/call_methylation/zlib-1.2.8
Tue Jul 26 10:54:05 CST 2016
Checking for gcc...
=== ztest802.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest802.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest802.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest802.c

Checking for shared library support...
=== ztest802.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest802.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.8 -O3 -fPIC -o ztest802.dylib ztest802.o
Building shared library libz.1.2.8.dylib with gcc.

=== ztest802.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest802.c
ztest802.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest802.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest802 ztest802.c
Checking for fseeko... Yes.

=== ztest802.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest802 ztest802.c
Checking for strerror... Yes.

=== ztest802.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest802.c
Checking for unistd.h... Yes.

=== ztest802.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest802.c
Checking for stdarg.h... Yes.

=== ztest802.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest802.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest802.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest802 ztest802.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest802.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest802.c
Checking for return value of vsnprintf()... Yes.

=== ztest802.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest802.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.8
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.8.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /Users/weilongguo/Documents/program/call_methylation/zlib-1.2.8
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure --prefix=/Users/weilongguo/Documents/program/call_methylation/zlib-1.2.8
Tue Jul 26 10:54:13 CST 2016
Checking for gcc...
=== ztest937.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest937.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest937.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest937.c

Checking for shared library support...
=== ztest937.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest937.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.8 -O3 -fPIC -o ztest937.dylib ztest937.o
Building shared library libz.1.2.8.dylib with gcc.

=== ztest937.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest937.c
ztest937.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest937.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest937 ztest937.c
Checking for fseeko... Yes.

=== ztest937.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest937 ztest937.c
Checking for strerror... Yes.

=== ztest937.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest937.c
Checking for unistd.h... Yes.

=== ztest937.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest937.c
Checking for stdarg.h... Yes.

=== ztest937.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest937.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest937.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest937 ztest937.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest937.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest937.c
Checking for return value of vsnprintf()... Yes.

=== ztest937.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest937.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.8
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.8.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /Users/weilongguo/Documents/program/call_methylation/zlib-1.2.8
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure --prefix=/Users/weilongguo/Documents/program/cgmaptools/src/zlib-1.2.8
Tue Aug  9 17:52:29 CST 2016
Checking for gcc...
=== ztest4216.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4216.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4216.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4216.c

Checking for shared library support...
=== ztest4216.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4216.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.8 -O3 -fPIC -o ztest4216.dylib ztest4216.o
Building shared library libz.1.2.8.dylib with gcc.

=== ztest4216.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4216.c
ztest4216.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest4216.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest4216 ztest4216.c
Checking for fseeko... Yes.

=== ztest4216.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest4216 ztest4216.c
Checking for strerror... Yes.

=== ztest4216.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest4216.c
Checking for unistd.h... Yes.

=== ztest4216.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest4216.c
Checking for stdarg.h... Yes.

=== ztest4216.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest4216.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4216.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest4216 ztest4216.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4216.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest4216.c
Checking for return value of vsnprintf()... Yes.

=== ztest4216.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest4216.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.8
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.8.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /Users/weilongguo/Documents/program/cgmaptools/src/zlib-1.2.8
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure --prefix=/data2/user2/liuyh/bin/cgmaptools-master/include/zlib-1.2.8
Sat May 14 10:53:55 CST 2022
Checking for gcc...
=== ztest133288.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest133288.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest133288.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest133288.c

Checking for shared library support...
=== ztest133288.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest133288.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest133288.so ztest133288.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest133288.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest133288.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest133288.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest133288 ztest133288.c
Checking for strerror... Yes.

=== ztest133288.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest133288.c
Checking for unistd.h... Yes.

=== ztest133288.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest133288.c
Checking for stdarg.h... Yes.

=== ztest133288.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest133288.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest133288.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest133288 ztest133288.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest133288.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest133288.c
Checking for return value of vsnprintf()... Yes.

=== ztest133288.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest133288.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /data2/user2/liuyh/bin/cgmaptools-master/include/zlib-1.2.8
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/data2/user2/miaolf/bin/cgmaptools_for_python3/include/zlib-1.2.8
Wed Aug 31 12:01:52 CST 2022
Checking for gcc...
=== ztest174596.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest174596.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest174596.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest174596.c

Checking for shared library support...
=== ztest174596.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest174596.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest174596.so ztest174596.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest174596.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest174596.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest174596.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest174596 ztest174596.c
Checking for strerror... Yes.

=== ztest174596.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest174596.c
Checking for unistd.h... Yes.

=== ztest174596.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest174596.c
Checking for stdarg.h... Yes.

=== ztest174596.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest174596.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest174596.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest174596 ztest174596.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest174596.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest174596.c
Checking for return value of vsnprintf()... Yes.

=== ztest174596.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest174596.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /data2/user2/miaolf/bin/cgmaptools_for_python3/include/zlib-1.2.8
sharedlibdir = ${libdir}
uname = Linux
--------------------


